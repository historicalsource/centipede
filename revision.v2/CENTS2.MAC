	.TITLE CENTS2
	.NLIST
	.INCLUDE CENDEF
	.LIST
	.PAGE
	.PAGE
	.CSECT	CENTST


	.SBTTL	CKSUM-CHECKSUM EAROM
;
;EXIT	(EACKSM)=NEW CHECKSUM
;	(A)=DIFFERENCE BETWEEN OLD & NEW CHECKSUM
;	(Y)=OLD CHECKSUM
;USES	A,Y
CKSUM:	LDY I,60.		;MUST BE EVEN NUMBER OF BYTES FOR EOR TEST
	LDA I,0FF		;STARTING PATTERN
10$:	EOR Y,EAROM		;EXCLUSIVE OR CHECKSUM
	DEY
	BPL 10$
	LDY EACKSM
	STA EACKSM		;SAVE NEW CHECKSUM
	TYA
	EOR EACKSM		;COMPARE WITH CURRENT CHECKSUM
	RTS


	.SBTTL	CHKEA-CHECK EAROM INTEGRITY
CHKEA:	LDX I,6*NSCORE-1
20$:	LDA X,99$		;SEED HIGH SCORE TABLE
	STA X,HSCORE
	DEX
	BPL 20$
	JSR CKSUM		;CHECKSUM EAROM
	BNE 30$			;INVALID DATA IN EAROM
	LDA OPTNS
	AND I,7C		;GET BONUS LEVEL AND NUMBER OF LIVES AND DIFFICULTY
	CMP EAOPTS
	STA EAOPTS		;SAME NEW SETTINGS
	BNE 28$			;DIFFERENT OPTION SETTINGS IGNORE HIGH SCORES
	LDA EAROM+2
	BEQ 30$			;IF HIGH SCORE IS BAD (IT MUST BE >16K)
	LDX I,08		;ASSUMING A GAME WILL NOT BE FINISHED AND
24$:	LDA X,EAROM		;BE ON THE HIGH SCORE TABLE WITHIN 8 SECONDS
	STA X,HSCORE
	CMP I,9A
	BCS 30$			;INVALID SCORE
	AND I,0F
	CMP I,0A
	BCS 30$			;INVALID SCORE
	LDA X,EAROM+9
	STA X,INITL		;UPDATE SCORES AND INITIALS
	DEX
	BPL 24$
28$:	RTS

30$:	LDA I,0
	LDX I,62.
35$:	STA X,EAROM		;CLEAR EAROM BUFFER
	DEX
	BPL 35$
	LDA OPTNS
	AND I,7C		;BONUS LEVEL AND NUMBER OF LIVES ONLY
	STA EAOPTS		;SET OPTION SETTINGS
	RTS

99$:	.BYTE 43,65,1		;INITIAL HIGH SCORE TABLE
	.BYTE 32,54,1
	.BYTE 20,43,1
	.BYTE 10,32,1
	.BYTE 10,30,1
	.BYTE 05,28,1
	.BYTE 01,22,1
	.BYTE 02,21,1
	.BYTE 5,0A,4		;EJD
	.BYTE 4,6,14		;DFT
	.BYTE 3,1,4		;CAD
	.BYTE 4,3,2		;DCB
	.BYTE 5,4,0		;ED
	.BYTE 4,5,17		;DEW
	.BYTE 4,6,17		;DFW
	.BYTE 7,0A,12		;GJR

	.SBTTL	INITEA-INITIALIZE FROM EAROM
;
;	THIS ROUTINE MUST NOT BE INTERRUPTED OTHERWISE
;	THE TIMING PULSES MAY CAUSE THE EA ROM TO BE MISREAD.
;
INITEA:	LDX I,63.		;READ ALL OF THE EAROM
10$:	JSR READEA		;READ EA ROM LOCATION
	STA X,EAROM
	DEX
	BPL 10$			;READ IT ALL NOW
	STX ROMA		;STOP ANY EAROM REQUESTS
	RTS


	.SBTTL	READEA-READ EA ROM
;
;THIS ROUTINE ASSUMES THAT NO IRQ/NMI
;INTERRUPTS WILL OCCUR OTHERWISE THE RESULTS
;ARE INDETERMINATE.
;
;ENTRY	(X)=ADDRESS TO READ (0 TO 63.)
;EXIT	(A)=VALUE READ FROM EA ROM
;USES	A,Y
READEA:	STA X,EAADDR		;SET ADDRESS LATCH (WRITE DECODED)
	LDY I,8
	STY EACTRL		;SET READ MODE AND ENABLE CHIP
	INY			;Y=9
	STY EACTRL		;ENABLE CLOCK
	DEY			;Y=8
	STY EACTRL		;DISABLE CLOCK-DATA IN 2 US
	LDY I,0
	LDA X,EAREAD		;READ DATA-6 CYCLES AT 1.5MHZ >2 US
	STY EACTRL		;DESELECT CHIP WITHIN 24 US
	RTS


	.SBTTL	WRITEA-WRITE DATA TO EAROM
;
;ENTRY	(ROMA)=CURRENT EAROM ADDRESS (0-63.)
;	(ROMC)=CURRENT OPERATION (0=COMPARE, 1=WRITE DATA)
;	(FRAME)=FRAME COUNT INCREMENTED EVERY 16 MS
;EXIT	(ROMA)=UPDATED TO NEXT LOCATION TO WRITE
;	(ROMC)=1=TO WRITE DATA, 0=CONTINUE COMPARE
WRITEA:	LDA FRAME
	AND I,3
	BNE 10$			;EVERY 64 MS CHECK EAROM
	STA EACTRL		;DISABLE EAROM
	LDX ROMA
	BMI 10$			;ALL DONE
	LSR ROMC
	BCC 20$			;COMPARE NEXT LOCATION-JUST FINISHED A WRITE
	LDA I,2			;WRITE DATA CURRENTLY LATCHED
	STA EACTRL
	LDA I,0A
	STA EACTRL		;ENABLE CHIP AND START
	DEC ROMA		;MOVE TO NEXT ADDRESS FOR COMPARE
10$:	RTS

20$:	SEI			;DISABLE IRQ
25$:	JSR READEA		;READ EA ROM
	CMP X,EAROM
	BNE 30$			;DATA IS NOT THE SAME
	DEX
	BPL 25$			;READ NEXT LOCATION
	CLI
	STX ROMA		;NO FURTHER COMPARES.
	RTS			;CLEAR CHIP ENABLE IN 64 MS

30$:	CLI			;ENABLE IRQ'S AGAIN
	STX ROMA		;RESET WHERE WE LEFT OFF
	LDA I,6
	STA EACTRL		;DESELECT CHIP AND SET ERASE MODE
	LDA X,EAROM
	STA X,EAADDR		;SET DATA AND ADDRESS LATCH
	LDA I,0E
	STA EACTRL		;ENABLE CHIP AND START ERASE
	INC ROMC		;SET TO WRITE NEXT TIME THRU
	RTS


	.SBTTL RESET-POWER-ON RESET
RESET:	CLD
	LDX I,0FF
	TXS			;SET STACK POINTER
	INX
	TXA
10$:	STA ZX,0		;CLEAR ZERO PAGE
	STA X,100		;CLEAR PAGE ONE
	STA X,PLYFLD
	STA X,PLYFLD+100
	STA X,PLYFLD+200
	STA X,PLYFLD+300
	DEX
	BNE 10$			;LEAVE WITH X=0
	STA SKCTL		;INITIALIZE POKEY
	STA AUDCTL		;CLEAR POKEY CONTROL REGISTER
	STA CTBALL		;CLEAR TRACK BALL COUNTERS
	STA FLIP		;CLEAR FLIP
	LDA SLFTST
	AND I,20
	BEQ TREPT		;SELF-TEST
	LDA OPTSW1
	STA OPTNS		;SAVE OPTION SWITCHES FOR INVALIDATING HIGH SCORES
	DEX			;X=OFF
	STX MODE
	STX UPDFLG
	STX UPDFLG+1
	LDA I,1
	STA ONE			;FIRST TIME THRU
	JSR INITEA		;READ EAROM
	JSR CHKEA		;CHECK EAROM CONTENTS
	JMP MAIN		;ELSE GO TO GAME MODE

	.SBTTL	ZERO-PAGE TEST
TREPT:	STX COLORR		;TAN BACKGROUND
	STX AUDC0
	STX AUDC1
	STX AUDC2
	STX AUDC3
	INX
	STX COLORR+1		;LIGHT GREEN FOR PF
	STX COLORR+9		;LIGHT GREEN FOR MOTION OBJECTS
	INX
	STX COLORR+2		;2 PINK FOR PLAYFIELD
	STX COLORR+0A		;PINK FOR MOTION OBJECTS
	INX
	STX COLORR+3		;DARK BLUE FOR PLAYFIELD
	STX COLORR+0B		;DARK BLUE FOR MOTION OBJECTS
	LDX I,0
20$:	LDA X,0
	BNE 70$			;NON ZERO=ERROR
	LDA I,11
30$:	STA X,0			;WRITE OUT TEST PATTERN
	TAY
	EOR X,0
	BNE 70$			;NOT THE SAME-ERROR
	TYA
	ASL
	BCC 30$			;SHIFT PATTERN
	INX
	BNE 20$			;NEXT LOCATION
	STA WTCHDG		;NOT NOW
	TXA
	STA TEMP1
	ROL			;START AT ADDRESS 100
35$:	STA TEMP1+1		;USE ZERO PAGE FOR REST OF MEM TEST
	LDY I,0
40$:	LDX I,11		;CURRENT PATTERN
	LDA NY,TEMP1
	BNE 80$			;AN ERROR-MUST START ZERO
45$:	TXA
	STA NY,TEMP1		;WRITE TO LOCATION
	EOR NY,TEMP1		;COMPARE IT
	BNE 80$			;OR ERROR
	TXA
	ASL
	TAX
	BCC 45$			;NEXT PATTERN
	INY
	BNE 40$			;NEXT LOCATION TO TEST
	STA WTCHDG		;NOT NOW
	INC TEMP1+1
	LDA TEMP1+1
	CMP I,2
	BNE 50$			;TRY PLAYFIELD RAM
	LDA I,PLYFLD/100
50$:	CMP I,PLYFLD+400/100
	BCC 35$			;NEXT PAGE TO TEST
	BCS TVTEST

70$:	CMP I,10		;CC=D0-D3 IN ERROR ;CS=D4-D7 IN ERROR
	LDA I,0
	BPL 85$			;ALWAYS

80$:	LDX TEMP1+1
	CPX I,PLYFLD/100
	BCC 70$			;MUST BE WITHIN ONE OF TWO 2114'S
	TAX
	TYA			;THE 2101'S ARE ORGANIZED BY BLOCKS OF
	AND I,30		;16 BYTES EACH ALTERNATING EVERY
	LSR			;4*16 BYTES
	LSR
	LSR
	LSR			;CLEARS CARRY
	ADC I,1			;1=FIRST PAIR, 2=SECOND PAIR, ETC
	CPX I,10		;DETERMINE LSB OR MSB
85$:	ROL			;NUMBER OF GOOD CHIPS BEFORE ERROR
	TAY
	LDA I,40		;SAME FREQUENCY
	STA AUDF0
	LDX I,03
	STX SKCTL		;TURN ON POKEY
STEST1:	LDX I,10
	LDA I,0AF
	STA AUDC0		;PURE TONE VOLUME ON
5$:	BIT ENDSCN
	BVC 5$			;WAIT UNTIL VBLANK STARTS
10$:	BIT ENDSCN
	BVS 10$			;WAIT UNTIL VBLANK ENDS
	DEX
	BNE 5$			;COUNT DOWN VBLANK'S
	STX AUDC0		;TURN OFF SOUNDS
	LDX I,10
15$:	BIT ENDSCN
	BVC 15$			;WAIT UNTIL VBLANK STARTS
20$:	BIT ENDSCN
	BVS 20$			;WAIT UNTIL VBLANK ENDS
	DEX
	BNE 15$			;COUNT DOWN VBLANK'S
	DEY
	BPL STEST1		;LOOP DESIRED NUMBER OF TIMES
STOP:	STA WTCHDG		;NOT NOW
	LDA SLFTST
	AND I,20
	BEQ STOP		;WAIT UNTIL SEFTST SW IS PUSHED
10$:	BNE 10$			;START ALL OVER W/WATCHDOG

	.SBTTL	TV MONITOR ADJUSTMENT TEST
TVTEST:	LDA $LAM
	AND I,$LMBIT
	BEQ 3$
	JMP PATSCN		;IF SLAM IS NOT ON CONTINUE SELF TEST

3$:	TAX			;X=0
4$:	STA X,0			;PREVENT SOFTWARE WATCHDOG,
	INX			;SLAM ABUSE ALARM AND
	BNE 4$			;COIN COUNTERS
	LDX I,15.
	LDA I,0F8		;BLACK COLOR
5$:	STA X,MOBJV		;REMOVE MOTION OBJECTS
	DEX
	BPL 5$
	LDA I,7
	STA TEMP1+1
	LDY I,0BF
10$:	LDA I,2D		;BLOCK OF COLOR 3
12$:	LDX I,08
14$:	STA NY,TEMP1
	DEY
	DEX
	BNE 14$			;1/4 OF SCREEN HEIGHT
	SEC			;X=0 FOR NEXT TEST
	SBC I,01
	CMP I,2A		;USE PLAYFIELD STAMPS 2A THRU 2D
	BCS 12$			;CONTINUE FOR ONE VERTICAL COLUMN
	CPY I,0FF
	BNE 10$			;NOT CROSSING PAGE BOUNDARY
	DEC TEMP1+1
	LDA TEMP1+1
	CMP I,04
	BCS 10$			;CONTINUE UNTIL END OF PLAYFIELD
	CLI			;START INTERRUPTS
20$:	LDA SLFTST
	AND I,20
	BNE 20$			;IF NOT IN SELF TEST LET WATCHDOG RESET US
	LSR SYNC		;DO NOT LET IRQ HANG US WITH SOFTWARE WATCHDOG
	STA WTCHDG
	LDA $COINA
	AND I,0E0		;D5-D7=COIN SWITCHES
	EOR I,0E0		;0=ON
	BEQ 20$			;WAIT FOR NEXT TEST
	LDA I,1D
	SEI			;NO MORE COLOR BARS
30$:	STA X,PLYFLD		;SET UP DOT PATTERN THRU PLAYFIELD
	STA X,PLYFLD+100
	STA X,PLYFLD+200
	INX
	BNE 30$
35$:	STA X,PLYFLD+300
	INX
	CPX I,0C0
	BCC 35$
	LDX I,8
	STX COLORR+1		;WHITE DOTS
	LDX I,0F
	STX COLORR		;4 LSB'S=F=BLACK BACKGROUND
40$:	LDA SLFTST
	AND I,20
	BNE 40$			;IF NOT IN SELF TEST WANT FOR WATCHDOG
	STA WTCHDG
	LSR SYNC		;DO NOT LET SOFTWARE WATCHDOG RESET US
	BPL 40$			;ALWAYS


	.SBTTL	PATTERN SCREEN
PATSCN:	LDX I,0
1$:	TXA
	STA AX,PLYFLD+300	;LEAVE COLUMNS SHOWING CHARACTER SET
	LDA I,0
	STA X,0			;CLEAR ZERO PAGE PARAMETERS FOR IRQ
	STA AX,PLYFLD		;CLEAR REST OF PLAYFIELD
	STA AX,PLYFLD+100
	STA AX,PLYFLD+200
	INX
	BNE 1$
	DEX			;X=-1
	STX COLCNT		;NO COLOR BARS
	STX INPUT+6		;TO TEST POLYCOUNTER
	STA STRTL1
	STA STRTL2		;TURN ON LED'S
	LDX I,0F
10$:	TXA
	ORA I,80
	STA X,MOBJH		;PUT MOTION OBJECTS IN MIDDLE
	STA X,MOBJV
	DEX
	BPL 10$
	LDA RNGEN
	EOR RNGEN
	STA INPUT+8		;MUST BE ZERO ELSE POKEY IS BAD
	LDA I,3			;TURN ON POKEY
	STA SKCTL

	.SBTTL	ROM TEST
ROMTST:	LDX I,0			;PROG STARTS ON EVEN PAGE BOUNDARY
	STX TEMP1		;LOW ADDRESS PTR
	LDA I,PROG&0FF00/100	;HIGH BYTE OF PROG ADDR
	STA TEMP1+1		;HIGH ADDRESS PTR
	LDX I,31.		;32 PAGES OF ROM(8K)
	LDA I,0FF		;STARTING TEST PATTERN
10$:	LDY I,0
	STX A,WTCHDG		;MUZZLE DOG
1$:	EOR NY,TEMP1		;LONGITUDINAL PARITY
	INY
	BNE 1$			;LOOP FOR 1 PAGE
	TAY			;SAVE LRC
	TXA
	AND I,7			;3 LSB=PAGE IN ROM
	CMP I,1			;CLEAR CARRY IF END OF ROM
	TYA			;PUT LRC BACK
	BCS 3$			;SKIP IF IN ROM
	PHA			;ELSE SNAP FOR ANALYZER
	LDA I,0FF		;NEW STARTING PATTERN
3$:	INC TEMP1+1		;BUMP PTR
	DEX			;COUNT PAGES
	BPL 10$
	LDA I,PLYFLD/100	;DISPLAY CHECKSUMS
	STA TEMP4+1
	LDX I,3
15$:	TXA
	EOR I,3F
	STA TEMP4		;STARTING ADDRESS FOR MESSAGE
	PLA
	BEQ 20$
	PHA
	TXA
	ORA I,20		;NUMBERS START AT 20
	JSR CHAR		;DISPLAY NUMBERS
	LDA I,0
	JSR CHAR		;BLANK
	PLA
	CLC
	JSR DIGIT2		;CHECKSUM IN ERROR
20$:	DEX
	BPL 15$			;DO ALL CHECKSUMS

	.SBTTL	EAROM ACCOUNTING COMPUTATIONS

	JSR INITEA		;READ IN EAROM
	LDY I,6
25$:	LDA Y,EAGAMS		;COPY EA ROM ACCOUNTING TO SCRATCH RAM
	STA Y,TEMP2+1		;SAVE IN TEMP2+1 THRU TEMP5
	DEY
	BPL 25$
	SED
	LDA EAGAMS
	ORA EAGAMS+1
	ORA EAGAMS+2
	BEQ 40$			;IMPOSSIBLE SET GAME TIME TO MAX
30$:	INY			;Y=0 FIRST TIME THRU-UNDERESTIMATE A LITTLE
	LDA TEMP4		;SUBTRACT NUMBER OF GAMES
	SEC			;UNTIL TOTAL GAME TIME IS NEGATIVE
	SBC TEMP2+1		;NOTE THAT THE RESULT IS MODUL0 16 MINUTES
	STA TEMP4		;64 SECONDS = 1 MINUTE
	LDA TEMP4+1
	SBC TEMP3
	STA TEMP4+1
	LDA TEMP5
	SBC TEMP3+1
	STA TEMP5
	LDA TEMP5+1
	SBC I,0
	STA TEMP5+1
	BPL 30$			;IF NOT DONE
40$:	CLD
	STY TEMP2		;4 BITS OF MINUTES AND 4 BITS OF SECONDS (/4)
	CLI			;ENABLE IRQ FOR MOTION OBJECTS

	.SBTTL	MAIN LOOP OF SELF TEST
;
;	STTMP1=WHICH AUDIO CHANNEL IS USED (0,2,4 OR 6)
;	STTMP3=CURRENT MOTION OBJECT (0,1,2...,F)
;	(TEMP2)=AVERAGE GAME TIME
;	STM0=MOTION OBJECT COLOR
;	STBKG=BACKGROUND COLOR
;	STPF=PLAYFIELD COLOR
;
SFTEST:	LSR SYNC		;---
	BCC SFTEST		;WAIT FOR VBLANK
	LDA SLFTST
	AND I,20
5$:	BNE 5$			;LET WATCHDOG RESET SELF TEST
	STA WTCHDG
STCLOR:	LDA START1
	LSR			;D0=0=ON
	ROL STBNC1		;DEBOUNCE
	LDA STBNC1
	AND I,3
	CMP I,2
	BNE 10$			;NO RELEASE OF SWITCH
	LDA STTMP1
	TAX
	CLC
	ADC I,02		;USE NEXT CHANNEL
	AND I,6			;ONLY 4 CHANNELS
	STA STTMP1
	LDA I,0
	STA X,AUDC0		;TURN OFF OLD CHANNEL
	LDA STTMP3
	CLC
	ADC I,01
	AND I,0F		;THIS IS MOTION OBJECT POINTER-MUST BE VALID
	STA STTMP3
	LDX STBKG
	INX
	TXA
	AND I,0F		;MODULS 16
	TAX
	STX COLORR		;SET BACKGROUND COLOR
	STX STBKG
10$:	LDA START2
	LSR
	LSR			;D1=0=ON
	ROL STBNC2		;DEBOUNCE
	LDA STBNC2
	AND I,3
	CMP I,2
	BNE 20$			;NO RELEASE OF SWITCH
	INC STPF
	LDA STPF
	LDY I,1			;SET UP FIRST INDEX
15$:	CLC
	ADC I,01		;NEXT COLOR IN GROUP OF THREE
	AND I,0F
	STA Y,COLORR
	STA Y,COLORR+8		;MOTION OBJECTS TOO
	INY
	CPY I,04
	BCC 15$			;SET ALL THREE PLAYFIELD COLORS
20$:	LDA FIRE
	LSR
	LSR
	LSR			;D2=0=ON
	ROL STBNC3		;DEBOUNCE
	LDA STBNC3
	AND I,3
	EOR I,2
	BNE 25$			;SWITCH WAS NOT JUST DEPRESSED
	STA OLDTB
	STA OLDTB+2
	STA CTBALL		;PREVENT WRONG DIRECTION INDICATION
	LDA I,01
	STA FLIP		;SSET SWITCH TO PLAYER 1 TRACKBALL AND JOYSTICK
	STA PLAYER
	LDX I,0F
22$:	INC X,MOBJP		;GO THRU ALL PICTURES
	DEX
	BPL 22$			;GO THRU ALL MOTION OBJECTS
25$:	LDA FIRE		;D3=0=PLAYER 2 FIRE
	LSR
	LSR
	LSR
	LSR
	ROL STBNC4
	LDA STBNC4
	AND I,3
	EOR I,2
	BNE 29$			;IF SWITCH NOT JUST DEPRESSED
	STA OLDTB
	STA OLDTB+2		;PREVENT WRONG DIRECTION INDICATION
	STA CTBALL
	LDA I,02
	STA PLAYER 		;USE PLAYER 2 JOYSTICK
	LDA I,-1
	STA FLIP		;USE PLAYER 2 TRACKBALL
29$:	LDA I,PLYFLD+138/100	;DISPLAY NUMBER OF LIVES
	STA TEMP4+1
	LDA I,PLYFLD+138&0FF
	STA TEMP4
	LDA OPTSW1
	AND I,0C
	LSR
	LSR
	ADC I,01		;2 THRU 5 LIVES
	STA TEMP1
	LDX I,5			;LOOP COUNTER
30$:	LDA I,1F		;PICTURE CODE FOR PLAYERS PIECE
	BIT TEMP1
	BPL 35$			;IF MORE SHIPS
	LDA I,0			;CLEAR OLD SHIP IF SWITCH CHANGED
35$:	JSR CHAR		;DISPLAY A PICTURE OF PLAYERS PIECE
	DEC TEMP1
	DEX
	BNE 30$
	LDA I,PLYFLD+137&0FF	;DISPLAY MUCH MULTIPLIERS
	STA TEMP4
	LDA I,21
	JSR CHAR		;DISPLAY A 1=LEFT MECH MULTIPLIER
	LDA OPTSW2
	AND I,10
	LSR
	LSR
	LSR			;CLEARS CARRY
	LSR
	ADC I,01		;1 OR 2
	ORA I,20
	JSR CHAR		;CENTER MECH MULTIPLIER (1 OR 2)
	LDA OPTSW2
	AND I,0C
	LSR
	LSR			;CLEARS CARRY
	BNE 40$			;IF NOT SET FOR UNIT COIN
	LDA I,-2
40$:	ADC I,3			;1,4,5, OR 6
	ORA I,20
	JSR CHAR		;DISPLAY MECH MULTIPLIER
	LDA I,PLYFLD+136&0FF
	STA TEMP4
	LDA I,0
	TAY
	STA NY,TEMP4		;CLEAR LAST BONUS ADER
	LDY I,40
	STA NY,TEMP4
	LDA OPTSW2
	LSR
	LSR
	LSR
	LSR
	LSR
	BEQ 50$			;NO BONUS COINS
	TAX
	CMP I,06
	BCS 50$
	LDA X,BONUSC-1		;GET BONUS COIN VALUE
	JSR CHAR		;DISPLAY THE NUMBER
	LDA I,0
	JSR CHAR		;SKIP A SPACE
	LDA I,21
	CPX I,3
	BNE 48$			;IF ONLY GIVING 1 BONUS UNIT COIN
	LDA I,22
48$:	JSR CHAR		;DISLAY BONUS COINS GIVEN
50$:	LAH HARD		;DISPLAY GAME DIFFICULTY
	STA TEMP5+1
	LAL HARD
	BIT OPTSW1
	BVC 55$			;IF HARD GAME SELECTED
	LAL EASY
55$:	STA TEMP5		;SET MESSAGE ADDRESS
	LDA I,PLYFLD+135&0FF
	STA TEMP4		;DESTINATION ADDRESS
	JSR MESSAG		;DISPLY "EASY" OR "HARD"
	LDA START1		;READ IN ALL SWITCHES
	STA INPUT+2
	LDA OPTSW1
	STA INPUT+0
	LDA OPTSW2
	STA INPUT+1
	LDA TBALL
	AND I,8F
	STA INPUT+3
	LDA TBALL+2
	AND I,8F
	STA INPUT+4
	LDA JOYSTK
	STA INPUT+5
	LDA RNGEN
	PHA
	AND INPUT+6		;CHECK SORTED BITS IN POKEY
	STA INPUT+6		;DISPLAY RANDOM NUMBERS
	PLA
	ORA INPUT+7		;CHECK FOR SHORTED BITS IN POKEY
	STA INPUT+7


	.SBTTL	SWITCH TEST CALCULATIONS
SWTCHS:	LDX I,0			;CLR X
	LDA START1		;
	SEC			;8 SWITCHES
	ROL
1$:	BCS 2$
	INX			;COUNT 0'S
2$:	ASL			;SHIFT TO NEXT SW
	BNE 1$			;IF THERE IS ONE
	TXA			;X=NUMBER OF SWITCHES CLOSED (0 TO 8)
	LDY STTMP1
	ASL
	ASL
	ASL
	STA Y,AUDF0		;SET FREQUENCY BY NUMBER OF SWITCHES
	TXA
	ORA I,0A0		;SET VOLUME BY NUMBER OF SWITCHES
	STA Y,AUDC0
	LDX STTMP3		;MOTION OBJECT POINTER
	LDY I,0
	LDA TB
	STY TB			;RESET COUNTER FOR IRQ
	CLC
	ADC X,MOBJH
	STA X,MOBJH		;MOVE CURRENT MOTION OBJECT
	LDA X,MOBJV
	SEC
	SBC TB+2		;VERTICAL IS INVERTED
	STY TB+2		;RESET COUNTER FOR IRQ
	STA X,MOBJV		;MOVE
	LDY I,6*32.+16.		;POSITION FOR 6 COLUMNS UP 16 ROWS FROM THE BOTTOM
	LDX I,5			;DISPLAY 6 COLUMNS OF INPUTS
5$:	TXS
	LDX I,7
10$:	TXA
	TSX
	ROL X,INPUT
	TAX
	LDA I,21		;(='0')ASSUME OFF (HI)
	BCS 12$			;IF SWITCH OFF (1)
	LDA I,20		;THEN WRITE '1'
12$:	INY			;ASSUME STRAIGHT FORWARD
	STA Y,PLYFLD		;ONE COLUMN AWAY FROM EDGE
	DEX
	BPL 10$
	TYA
	SEC
	SBC I,32.+8.
	TAY
	TSX			;NOTE:S MUST EXIT POSITIVE
	DEX
	BPL 5$
	LDA I,04
	STA TEMP4+1
	LDA I,3A
	STA TEMP4		;SET SCREEN ADDRESS FOR POKEY ERRORS
	LDA INPUT+7
	EOR I,0FF		;IT SHOULD NOW BE ZERO FOR NO SHORTED LOW BITS
	ORA INPUT+6
	ORA INPUT+8
	BEQ 15$			;EVERY THING IS FINE
	LDA I,25		;POKEY IS NOT GOOD
15$:	JSR CHAR		;DISPLAY A 5 IF POKEY IS BAD ELSE BLANK
	JSR WRITEA		;READ EAROM
	JSR CKSUM
	STY EACKSM		;RESTORE OLD CHECKSUM
	BEQ 20$			;EAROM IS VALID
	PHA			;SAVE OLD DIFFERENCE
	LDA I,3B
	STA TEMP4		;SET SCREEN POSITION FOR CHECKSUM ERROR
	LDA I,24
	JSR CHAR		;DISPLAY ROM NUMBER (4)
	LDA I,0
	JSR CHAR		;BLANK
	PLA
	JSR DIGIT2		;DISPLAY DIFFERENCE
	JMP 50$			;CONTINUE SELF TEST

20$:	LDA I,04			;SET POSITION FOR NUMBER OF PLAYS
	STA TEMP4+1
	LDA I,0E9
	STA TEMP4
	SEC			;ZERO SUPPESS
	LDA EAGAMS+2
	JSR DIGIT2		;DISPLAY 2 DIGITS
	LDA EAGAMS+1
	JSR DIGIT2		;DISPLAY 2 DIGITS
	LDA EAGAMS
	CLC			;NO MORE ZERO SUPPRESSION
	JSR DIGIT2		;DISLAY LAST 2 DIGITS
	LAL ACC1
	STA TEMP5		;WRITE OUT "PLAYS" MESSAGE
	LAH ACC1
	STA TEMP5+1
	JSR MESSAG		;WRITE "PLAYS" AFTER NUMBER
	LDA I,5
	STA TEMP4+1		;SET STARTING ADDRESS
	LDA I,08
	STA TEMP4
	LDA TEMP2
	LSR
	LSR
	LSR
	LSR
	SED
	CLC
	ADC I,0			;0 TO 15 IN DECIMAL
	CLD			;LEAVE CARRY CLEAR FOR "DIGIT2"
	SEC			;ZERO SUPPRESSION
	JSR DIGIT2		;DISPLAY MINUTES
	LDA I,2E
	JSR CHAR		;DISPLAY COLON
	LDA TEMP2
	AND I,0F
	SED
	CLC
	ADC I,0			;MAKE IT 0 TO 15
	STA TEMP2+1
	ADC TEMP2+1		;*4 TO MAKE IT REAL SECONDS
	STA TEMP2+1
	ADC TEMP2+1
	CLD
	CMP I,60
	BCC 38$			;IT IS POSSIBLE TO GET 60 SECONDS
	LDA I,59		;CHANGE IT TO 59
38$:	CLC			;NO ZERO SUPPRESSION
	JSR DIGIT2		;DISPLAY SECONDS
	LAL ACC2
	STA TEMP5		;STORE ADDRESS OF MESSAGE
	LAH ACC2
	STA TEMP5+1
	JSR MESSAG		;DISPLAY "GAME TIME" MESSAGE
	LDA STBNC1		;CHECK FOR AL THREE SWITCHES DOWN FOR 8 FRAMES
	ORA STBNC2
	ORA STBNC3
	BNE 50$			;IF NOT ALL DOWN
	LDA EACKSM
	EOR I,0FF
	STA EACKSM		;CHANGE CHECKSUM TO REMOVE DATA
	LDA I,EACKSM-EAROM
	STA ROMA		;WRITE THIS ONE BYTE IN EA ROM
	LDA I,0			;ERASE, WRITE AND READ NEW CHECKSUM
	STA ROMC
50$:	JMP SFTEST		;LOOP WHILE TEST SW IS ON


BONUSC:	.BYTE 22,24,24,25,23
ACC1:	.ASCIN / PLAYS/		;ACCOUNTING MESSAGES
ACC2:	.ASCIN / GAME TIME/
HARD:	.ASCIN	/HARD/
EASY:	.ASCIN	/EASY/
DIE:	JMP DIE			;WAIT FOR WATCHDOG

CKSUM3:	.BYTE 46
	.SBTTL VECTORS
	.WORD DIE,RESET,IRQ
	.REPT 0			;JUST FOR .ROM (=0)
	.VCTRS 0FFFC,RESET
	.VCTRS 0FFF8,IRQ	;DEVELOPMENT SYSTEM "UINT"
	.ENDR
	.END
	.PAGE
                                                                                                                                                                                                                                                                                                                                                                        